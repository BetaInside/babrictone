package com.github.BetaInside.babrictone.pathfinding;

import com.github.BetaInside.babrictone.pathfinding.actions.action;
import com.github.BetaInside.babrictone.pathfinding.goals.goal;
import net.minecraft.src.Vec3D;
import java.util.Objects;

public class node {
    final Vec3D pos;
    double cost;
    node previous;
    final goal goal;
    final double estimatedCostToGoal;
    action previousAction;
    boolean isOpen;
    node nextOpen;
    public node(Vec3D pos, goal goal) {
        this.pos = pos;
        this.previous = null;
        this.cost = Short.MAX_VALUE;
        this.goal = goal;
        this.estimatedCostToGoal = goal.heuristic(pos);
        this.previousAction = null;
        this.isOpen = false;
    }
    @Override
    public int hashCode() {//this is some OG code right here
        int hash = 3241;
        hash = (int) (3457689 * hash + this.pos.xCoord);
        hash = (int) (8734625 * hash + this.pos.yCoord);
        hash = (int) (2873465 * hash + this.pos.zCoord);
        hash = 3241543 * hash + Objects.hashCode(this.goal);
        return hash;
    }
    @Override
    public boolean equals(Object obj) {//autogenerated by netbeans. that's why it looks disgusting.
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final node other = (node) obj;
        if (!Objects.equals(this.pos, other.pos)) {
            return false;
        }
        return Objects.equals(this.goal, other.goal);
    }
}
